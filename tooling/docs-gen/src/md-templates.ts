import { ComponentDoc, PropItem } from 'react-docgen-typescript';

export function mdComponentTemplate(def: ComponentDoc) {
  return `---
# ${splitCamelCase(def.displayName)}

${def.description.replaceAll('\n', ' ')} 

${autogeneratedFileWarning}
${addUsage(def)}
${addProps(def.props)}
`;
}

export function mdHookTemplate(def: ComponentDoc) {
  return `
${autogeneratedFileWarning}

# ${def.displayName} Hook

${def.description.replaceAll('\n', ' ')} 
${addUsage(def)}
${addProps(def.props)}
`;
}

const splitCamelCase = (camelCaseStr: string) =>
  camelCaseStr.replace(/([a-z0-9])([A-Z])/g, '$1 $2');

function addUsage(def: ComponentDoc) {
  return `
## Usage

${def.tags?.example ? def.tags.example : 'No example yet.'}

`;
}

function addProps(props: ComponentDoc['props']): string {
  return `
## Props

${generateMarkdownPropsTable(props)}

`;
}

function generateMarkdownPropsTable(props: ComponentDoc['props']): string {
  function renderRow(item: PropItem) {
    const name = `${item.name}`;
    const type = `\`${item.type.name}\``;
    const defaultValue =
      typeof item.defaultValue && item.defaultValue === 'object'
        ? ` \`${JSON.stringify(item.defaultValue)}\``
        : '';
    const description = `${item.description}`;

    const row = `| ${name} | ${type} | ${defaultValue} | ${description} |`;
    return row;
  }
  return `
| Name | Type | Default | Description |
| --- | --- | --- | --- |
${Object.values(props)
  .map((propItem) => renderRow(propItem))
  .join('\n')}
`;
}

const autogeneratedFileWarning = `<!--
!!!! Autogenerated File !!!!
This file was created by @livekit/components-docs-gen and should not be changed manually.
The contents of this file can be replaced at any time which would lead to the loss of all manual changes.
-->`;
